{"version":3,"sources":["./src/app/comments-section/comments-section.component.html","./src/app/comments-section/comments-section.component.ts","./src/app/components/modal/modal.component.ts","./src/app/components/modal/modal.component.html","./src/app/components/modal/modal.service.ts","./src/environments/environment.ts","./src/app/components/vote-button/vote-button.component.ts","./src/app/components/vote-button/vote-button.component.html","./src/app/helper/pipe/time-passed.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/components.module.ts","./src/app/components/card/card.component.ts","./src/app/components/card/card.component.html","./src/app/comments.service.ts","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<ng-container *ngIf=\"comments\">    \n    <!-- All comments -->\n    <div class=\"comments\" *ngFor=\"let comment of comments\">\n        <app-card [comment]=\"comment\" [currentUser]=\"currentUser\" (update)=\"updateComment($event)\"\n            (delete)=\"onDeleteComment($event)\" (vote)=\"updateScore($event)\">\n        </app-card>\n\n        <!-- All Replies -->\n        <div class=\"replies\" *ngIf=\"comment.replies.length > 0\">\n            <div *ngFor=\"let reply of comment.replies\">\n                <app-card [comment]=\"reply\" [currentUser]=\"currentUser\" (update)=\"updateComment($event)\"\n                    (delete)=\"onDeleteComment($event)\" (vote)=\"updateScore($event)\">\n                </app-card>\n            </div>\n        </div>\n    </div>\n\n    <!-- form -->\n    <app-form [currentUser]=\"currentUser\" (add)=\"addComment($event)\"></app-form>\n</ng-container>\n\n\n<modal id=\"deleteModal\">\n    <h3 class=\"fw-500 modal-title\">Delete comment</h3>\n    <p class=\"modal-context\">Are you sure you want to delete this comment? This will remove the comment and can't be undone.</p>\n    <div class=\"update__btns d-flex\">\n        <button class=\"btn bg-grayish-blue btn-secondary-fill\" (click)=\"onCancel()\">NO, CANCEL</button>\n        <button class=\"btn bg-soft-red btn-delete-fill\" (click)=\"deleteComment()\">YES, DELETE</button>\n    </div>\n</modal>","import { Component, OnInit } from '@angular/core';\nimport { CommentsService } from '../comments.service';\nimport { Comment } from '../models/comment';\nimport { User } from '../models/user';\nimport { ModalService } from '../components/modal/modal.service';\nimport { Reply } from '../models/reply';\n\n@Component({\n  selector: 'app-comments-section',\n  templateUrl: './comments-section.component.html',\n  styleUrls: ['./comments-section.component.scss']\n})\nexport class CommentsSectionComponent implements OnInit {\n\n  comments: Comment[];\n  currentUser: User;\n  commentToDelete: Comment | Reply;\n  \n\n  constructor( private commentService: CommentsService, private modalService: ModalService ) { }\n\n  ngOnInit(): void {\n    \n    this.currentUser = this.commentService.getUser();\n    this.getAllComments();\n  }\n\n  getAllComments() {\n    this.comments = this.commentService.getComments();\n    console.log(this.comments);\n  }\n\n  addComment(newComment: Comment) {\n   this.comments = this.commentService.addComment(newComment);\n  }\n  \n  updateComment(comment: Comment) {\n    \n     this.commentService.updateComment(comment)\n  }\n\n  onDeleteComment(comment) {\n    this.commentToDelete = comment;\n    this.modalService.open('deleteModal');\n  }\n\n  deleteComment() {\n   \n    this.comments = this.commentService.deleteComment(this.commentToDelete);\n    this.onCancel();\n  }\n\n  onCancel() {\n    this.modalService.close('deleteModal');\n  }\n\n  updateScore(comment) {\n    \n    this.updateComment(comment);\n  }\n\n \n   \n}\n","import { Component, ElementRef, OnDestroy, OnInit, Input, ViewEncapsulation } from '@angular/core';\nimport { ModalService } from './modal.service';\n\n@Component({\n  selector: 'modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  @Input() id: string;\n  private element: any\n\n  constructor( private modalService: ModalService, private elementRef: ElementRef) { \n    this.element = elementRef.nativeElement\n  }\n\n  ngOnInit(): void {\n     // ensure id attribute exists\n    if (!this.id) {\n        console.error('modal must have an id');\n        return;\n    }\n\n    document.body.appendChild(this.element)\n\n    this.element.addEventListener('click', elementRef => {\n      if(elementRef.target.className == 'modal') {\n        this.close();\n      }\n    })\n\n     this.modalService.add(this);\n  }\n\n  ngOnDestroy(): void {\n    this.modalService.remove(this.id);\n    this.element.remove();\n  }\n\n  open(): void {\n    this.element.style.display = 'block';\n    document.body.classList.add('modal-open');\n  }\n\n  close(): void {\n    this.element.style.display = 'none';\n    document.body.classList.remove('modal-open');\n  }\n\n}\n","<div class=\"modal\">\n    <div class=\"modal-body\">\n        <ng-content></ng-content>\n    </div>\n</div>\n<div class=\"modal-background\"></div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  private modals: any = [];\n\n  constructor() { }\n\n   add(modal: any) {\n        // add modal to array of active modals\n        this.modals.push(modal);\n    }\n\n    remove(id: string) {\n        // remove modal from array of active modals\n        this.modals = this.modals.filter(x => x.id !== id);\n    }\n\n   open(id: string) {\n        // open modal specified by id\n        const modal = this.modals.find(x => x.id === id);\n        modal.open();\n    }\n\n    close(id: string) {\n        // close modal specified by id\n        const modal = this.modals.find(x => x.id === id);\n        modal.close();\n    }\n}\n","\nexport const environment = {\n  production: false\n};\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { Vote } from 'src/app/models/vote';\nimport { Comment } from 'src/app/models/comment';\n\n@Component({\n  selector: 'app-vote-button',\n  templateUrl: './vote-button.component.html',\n  styleUrls: ['./vote-button.component.scss']\n})\nexport class VoteButtonComponent implements OnInit {\n  @Input() vote: any;\n  @Input() comment: Comment;\n  @Input() currentUser: User;\n  @Output() voted = new EventEmitter<Vote>();\n  voteCount: any;\n\n\n  constructor() { }\n\n  ngOnInit(): void {   \n\n  }\n\n\n  voteUp() {\n\n    this.countVote('up');\n    this.voteCount.push(this.vote)\n\n    this.countVote('up');\n\n    this.voted.emit(this.vote)\n  }\n\n  voteDown() {\n    \n\n    this.countVote('down');\n    this.voteCount.push(this.vote)\n\n    this.countVote('down');\n\n    this.voted.emit(this.vote)\n  }\n\n\n  private countVote(vote) {\n    \n    if (vote === 'up') {\n      this.vote++;\n\n    } else {\n      this.vote--;\n\n    }\n  }\n\n}\n","<div class=\"btn__votes\">\n    <a class=\"upvote text-light-grayish-blue\" (click)=\"voteUp()\">\n        <i class=\"fa-solid fa-plus\"></i>\n    </a>\n      <p class=\"text-blue fw-500\">{{ vote }}</p>       \n    <a class=\"downvote text-light-grayish-blue\" (click)=\"voteDown()\">\n        <i class=\"fa-solid fa-minus\"></i>\n    </a>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'getPassedTime'\n})\nexport class TimePassed implements PipeTransform {\n\n  transform(time: string): string {\n    let createdAt = new Date(time);\n    let getMs = (new Date().getTime() - createdAt.getTime()) / 1000;\n    let ago = \"\";\n\n    // with less than 1 minute return 1m\n    if( getMs < 60 ) {\n      ago = \"sec ago\";\n    \n    // with less than 1 hour return mins\n    } else if( getMs < 3600 && getMs > 60 ) {\n      ago = Math.floor( getMs / 60 ) + \" min ago\";\n      \n    // with less than 1 day return hour \n    } else if(getMs < 86400 && getMs > 3600  ) {\n      ago = Math.floor(getMs /  3600) + \" hour ago\";\n    }\n    \n    // with less than 1 week  return day\n  else if (getMs < 604800 && getMs > 86400) {\n    ago = Math.floor(getMs / 86400) + \" day ago\";\n  }\n  \n  // with less than 1 month return weeks\n    else if ( getMs < 2419200 && getMs > 604800 ) {\n    ago = Math.floor(getMs / 604800) + \" weeks ago\";\n    }\n  \n    // with less than 1 year return month\n    else if ( getMs < 31104000 && getMs > 2419200 ) {\n      ago = Math.floor(getMs / 2419200) + \" month ago\";\n    }\n    \n    // with more than 1 year return year\n    else {\n      ago = Math.floor(getMs / 3.154e7) + \" year ago\";\n    }\n    \n    return ago;\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'InteractiveCommentsSection';\n}\n","<main class=\"container\">\n    <h1 class=\"header\">\n        Interactive Comment Section\n    </h1>\n    <app-comments-section></app-comments-section>\n</main>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { ComponentsModule } from './components/components.module';\nimport { CommentsSectionComponent } from './comments-section/comments-section.component';\nimport { CommentsService } from './comments.service';\nimport { TimeagoModule } from 'ngx-timeago';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CommentsSectionComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ComponentsModule,\n    TimeagoModule.forRoot()\n  ],\n  providers: [\n    CommentsService,\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardComponent } from './card/card.component';\nimport { VoteButtonComponent } from './vote-button/vote-button.component';\nimport { FormComponent } from './form/form.component';\nimport { FormsModule } from '@angular/forms';\nimport { TimePassed } from '../helper/pipe/time-passed.pipe';\nimport { ModalComponent } from './modal/modal.component';\nimport { TimeagoModule } from 'ngx-timeago';\n\n\n\n@NgModule({\n  declarations: [\n    CardComponent,\n    VoteButtonComponent,\n    FormComponent,\n    TimePassed,\n    ModalComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    TimeagoModule\n  ],\n  exports: [\n    CardComponent,\n    VoteButtonComponent,\n    FormComponent,\n    ModalComponent,\n  ]\n})\nexport class ComponentsModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Comment } from 'src/app/models/comment';\nimport { User } from 'src/app/models/user';\nimport { Reply } from 'src/app/models/reply';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() comment: Comment;\n  @Input() currentUser: User;\n  @Output() update = new EventEmitter<Comment>();\n  @Output() delete = new EventEmitter<Comment | Reply>();\n  @Output() vote = new EventEmitter<Comment>();\n\n  commentToUpdate: string = \"\";\n  onEditMode = false;\n  createdAt: string;\n  showForm = false;\n\n  constructor() { }\n\n  ngOnInit(): void {       \n    this.commentToUpdate = this.comment.content;\n  }\n\n\n  onDelete(comment: Reply | Comment) {\n  \n    this.delete.emit(comment);\n  }\n\n  onEdit() {\n    this.onEditMode = !this.onEditMode;\n  }\n\n  onCancel() {\n    this.commentToUpdate = this.comment.content;\n    this.onEditMode = false;\n  }\n\n\n  updateComment(comment: Comment) {\n\n    if (this.commentToUpdate == \"\" || this.commentToUpdate == undefined) {\n      return;\n    }\n\n    comment.content = this.commentToUpdate.trim();\n  \n    this.update.emit(comment);\n    this.onEditMode = false;\n  }\n\n  onVote(vote) {\n  \n    this.comment.score = vote;\n    this.vote.emit(this.comment);\n  }\n\n  onReply(e) {\n    this.showForm = !this.showForm;\n  }\n\n  ngOnDestroy() {\n    clearInterval();\n  }\n\n}\n","<div class=\"card bg-white d-flex\">\n    <div class=\"card__vote\">\n        <app-vote-button [vote]=\"comment.score\" (voted)=\"onVote($event)\" [currentUser]=\"currentUser\"></app-vote-button>\n    </div>\n\n    <div class=\"card__content\">\n        <div class=\"card__header d-flex\">\n            <div class=\"card__image\">\n                <img [src]=\"comment.user.image.png\" alt=\"comment.user.username\">\n            </div>\n            <p class=\"card__name text-dark-blue fw-500\">\n                {{ comment.user.username }}\n            </p>\n\n            <p *ngIf=\"comment.user.username === currentUser.username\" class=\"bg-blue text-white you\">YOU</p>\n            <p>{{ comment.createdAt | timeago }}</p>\n        </div>\n\n        <div class=\"card__buttons\">\n            <a class=\"btn-reply text-blue fw-500\"\n                *ngIf=\"comment.user.username !== currentUser.username else editDeleteBtns\" (click)=\"onReply()\">\n                <i class=\"fa-solid fa-reply\"></i>\n                <span>Reply</span>\n            </a>\n        </div>\n\n        <ng-template #editDeleteBtns>\n            <div class=\"btn-edit-delete\">\n                <a (click)=\"onDelete(comment)\" class=\"btn-delete text-soft-red fw-500\"> <i\n                        class=\"fa-solid fa-trash\"></i> Delete</a>\n                <a *ngIf=\"!onEditMode\" (click)=\"onEdit()\" class=\"btn-edit text-blue fw-500\"> <i\n                        class=\"fa-solid fa-pen\"></i> Edit</a>\n            </div>\n        </ng-template>\n\n        <p *ngIf=\"!onEditMode\" class=\"card__text\">\n            <span class=\"text-blue fw-500\" *ngIf=\"comment.replyingTo\">@{{ comment.replyingTo }}</span> {{\n            comment.content }}\n        </p>\n\n        <div *ngIf=\"onEditMode\">\n            <div class=\"reply__form\">\n                <textarea placeholder=\"Type a comment here...\" class=\"text-area text-grayish-blue ff-rubik text-area--comment\"\n                    [(ngModel)]=\"commentToUpdate\" name=\"reply\" id=\"reply\" cols=\"100\" rows=\"10\"></textarea>\n            </div>\n            <div class=\"update__btns\">\n                <button class=\"btn btn-outline--primary\" (click)=\"onCancel()\">Cancel</button>\n                <button class=\"btn bg-blue\" (click)=\"updateComment(comment)\">Update</button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- If main comment has no reply yet show this form -->\n<ng-container *ngIf=\"showForm\">\n    <app-form [currentUser]=\"currentUser\" [replyingTo]=\"comment\" (onReplyMode)=\"onReply($event)\"></app-form>\n</ng-container>","import { Injectable } from '@angular/core';\nimport * as commentsData from '../assets/json/data.json';\nimport { Comment } from './models/comment';\nimport { User } from './models/user';\n\nconst commentsStorageName = \"comments\";\nconst userStorageName = \"user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n\n  private comments: Comment[];\n  private user: User;\n\n  constructor() {\n    this.comments = JSON.parse(localStorage.getItem(commentsStorageName)) || commentsData.comments;\n    this.user = JSON.parse(localStorage.getItem(userStorageName)) || commentsData.currentUser;    \n   \n  }\n\n  // get user\n  getUser() {\n    return this.user;\n  }\n\n  // get all comments\n  getComments() {\n    return [...this.comments];\n  }\n  // add a new comment\n  addComment(newComment, id?: number) {\n   \n    if (id) {\n      let comment = this.findComment(id);\n     \n      let index = this.findCommentIndex(comment);\n      this.comments[index].replies.push(newComment);\n    \n    } else {\n      this.comments.push(newComment);\n    }\n\n    return this.updateStorage();\n  }\n\n  // update  comment\n  updateComment(updatedComment: Comment) {\n    \n    let index = this.findCommentIndex(updatedComment)\n    this.comments[index] = updatedComment;\n    return this.updateStorage();\n  }\n\n  // delete comment\n  deleteComment(newComment) {\n    if (newComment.replyingTo) {\n      let repliedToThisComment = this.findComment(newComment.comment_id);\n      let index = this.findCommentIndex(repliedToThisComment);\n      let insertComment = repliedToThisComment.replies.filter(reply => { return reply.id !== newComment.id })\n      repliedToThisComment.replies = insertComment;\n      this.comments[index] = repliedToThisComment      \n    } else {\n      this.comments = this.comments.filter(comment => { return comment.id !== newComment.id });\n      \n    }\n    return this.updateStorage()\n  }\n\n  // update storage after operation\n  private updateStorage() {\n    localStorage.setItem(commentsStorageName, JSON.stringify(this.comments))\n    return this.getComments();\n  }\n\n  private findCommentIndex(comment) {\n    return this.comments.indexOf(comment);\n  }\n  private findComment(id) {\n    return this.comments.filter(comment => { return comment.id === id })[0];\n  }\n\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { CommentsService } from 'src/app/comments.service';\nimport { Comment } from 'src/app/models/comment';\nimport { Reply } from 'src/app/models/reply';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit, AfterViewInit {\n  @Input() currentUser: User;\n  @Input() replyingTo;\n  @Output() add = new EventEmitter<Comment | Reply>();\n  @Output() onReplyMode = new EventEmitter<Reply>();\n\n  @ViewChild(\"textarea\") textarea: ElementRef\n\n  comment: string;\n\n  constructor(private commentService: CommentsService) { }\n\n  ngOnInit(): void {\n    \n    if (this.replyingTo) {\n      this.comment = `@${this.replyingTo.user.username} `\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.replyingTo) {\n      this.textarea.nativeElement.focus();\n    }\n  }\n\n  addComment() {\n    \n    if (this.comment === \"\" || this.comment == undefined) {\n      return;\n    }\n    const prevalue = {\n      id: Date.now() as number,\n      content: this.comment.trim(),\n      createdAt: new Date().toString(),\n      user: this.currentUser,\n      score:0,\n      vote: {\n        score: 0,       \n      },\n    }\n    if (this.replyingTo) {\n      let comment_id = this.replyingTo.comment_id ? this.replyingTo.comment_id : this.replyingTo.id;\n      prevalue.content = this.comment.replace(`@${this.replyingTo.user.username} `, '')\n      let reply: Reply = { ...prevalue, replyingTo: this.replyingTo.user.username, comment_id: comment_id }\n      this.commentService.addComment(reply, comment_id);\n      this.onReplyMode.emit(reply);\n    } else {\n      \n      let newComment: Comment = { ...prevalue, replies: [] }\n      this.add.emit(newComment)\n    }\n    this.comment = \"\";\n  }\n\n}\n","<div class=\"reply d-grid bg-white\" >\n    <div class=\"reply__image\">\n        <img [src]=\"currentUser.image.png\" [alt]=\"currentUser.username\">\n    </div>\n    <div class=\"reply__form\">\n        <textarea #textarea [placeholder]=\" replyingTo? '' : 'Type a comment here...'\" class=\"text-area text-grayish-blue ff-rubik\" [(ngModel)]=\"comment\" name=\"reply\" id=\"reply\" cols=\"30\" rows=\"10\"></textarea>\n    </div>\n    <div class=\"reply__btn\">\n        <button class=\"btn bg-blue\" (click)=\"addComment()\">SEND</button>\n    </div>\n  \n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}